# -*- coding: utf-8 -*-
"""
Created on Sun Jan 28 00:04:41 2024

@author: elgin
"""

import numpy as np
import pandas as pd
import os
from statsmodels.formula.api import ols
from scipy.stats import pearsonr

os.getcwd()  
os.chdir('/Users/elgin/OneDrive/Desktop/Python/Data')


#Question 8
df8 = pd.read_csv('DISCRIM.csv')
df8.head()
pd.options.display.max_columns = None
df8.describe()

#Question 8(i)
print(np.mean(df8.prpblck))
#0.11348639649783333
print(np.mean(df8.income))
#47053.784841075794
print(np.std(df8.prpblck))
#0.18219332799293875
print(np.std(df8.income))
#13163.164612055616
#income is in dollars & prpblck is a percentage

#Question 8(ii)
m8_1 = ols('psoda ~ prpblck + income', data=df8).fit() 
m8_1.summary()
#psoda = 0.9563 + 0.1150*prpblck + 0.000001603*income
#R-Squared = 0.064
#Sample Size = 401
#Holding income constant, if prpblock increases by one percent,
#psoda increases by 0.1150
#Yes, an increase in soda price of $0.11 does seem significant 

#Question 8(iii)
m8_2 = ols('psoda ~ prpblck', data=df8).fit() 
m8_2.summary()
#The discrimination effect (0.0649) is smaller without income

#Question 8(iv)
m8_3 = ols('np.log(psoda) ~ prpblck + np.log(income)', data=df8).fit() 
m8_3.summary()
#log(psoda) = -0.7938 + 0.1216*prpblck + 0.0765*log(income)
#R-Squared = 0.068
#Sample Size = 401
# 2.43%

#Question 8(v)
m8_4 = ols('np.log(psoda) ~ prpblck + np.log(income) + prppov', data=df8).fit() 
m8_4.summary()
#The coefficient for prpblck decreases to 0.0728

#Question 8(vi)
df8_1 = df8.dropna()
df8_1

df8_1.income_log = np.log(df8_1.income)
pearsonr(df8_1.income_log,df8_1.prppov)
#Corr Coeff = -0.8468178018317438 w/ p-value = 1.9070105291527946e-86
#Yes, I assumed that proportion in poverty and income would be highly, 
#negatively correlated (the higher proportion in poverty, the lower the income)

#Question 8(vii) -- ***CHECK THIS ANSWER (LOOK AT NOTES)
#Not necessarily true, it depends on their VIF

#Question 9
df9 = pd.read_csv('CHARITY.csv')
df9.head()
df9.describe()

#Question 9(i)
m9_1 = ols('gift ~ mailsyear + giftlast + propresp', data=df9).fit() 
m9_1.summary()
#gift = -4.5515 + 2.1663*mailsyear + 0.0059*giftlast + 15.3586*propresp
#R-Squared = 0.083
#Sample Size = 4268

m9_2 = ols('gift ~ mailsyear', data=df9).fit() 
m9_2.summary()
#gift = 2.0141 + 2.6495*mailsyear
#R=Squared decreased to 0.014

#Question 9(ii)
#In the multiple regression, holding giftlast and propresp constant, if 
#mailsyear increases by one unit, gift increases by 2.1663
#The mailsyear coefficient in the multiple regression is smaller than the 
#mailsyear coefficient in the simple regression

#Question 9(iii) -- ***CHECK UNIT OF MEASURMENT
#Holding mailsyear and giftlast constant, if proresp increases by one percent, 
#gift increases by 15.3586

#Question 9(iV)
m9_3 = ols('gift ~ mailsyear + giftlast + propresp + avggift', data=df9).fit() 
m9_3.summary()
#The coefficient of mailsyear increases to 1.2012

#Question 9(V)
#The coefficient of giftlast deacreases to -0.2609 (and becomes negative)
#This is likely because avggift was an important omitted variable and that the 
#coefficients of the other independent variables were inflated prior to adding
#avggift because of the omitted variable bias

#Question 11
df11 = pd.read_csv('MEAPSINGLE.csv')
df11.head()
df11.describe()

#Question 11(i)
m11_1 = ols('math4 ~ pctsgle', data=df11).fit() 
m11_1.summary()
#math4 = 96.7704 - 0.8329*pctsgle 
#R-Squared = 0.380
#Sample Size = 229
#Yes somewhat, for every one percent increase in single parents, math scores    
#drop by 0.8329% (NOT 83.29%) (That's almost a 1:1 negative relationship)

#Question 11(ii)
m11_2 = ols('math4 ~ pctsgle + lmedinc + free', data=df11).fit() 
m11_2.summary()
#math4 = 51.7232 - 0.1996*pctsgle + 3.5601*lmedinc - 0.3964*free
#The coefficient for pctsgle increased to -0.1996 (increases b/c its a smaller
#negative)
#This is likely because pctsgle was previously inflated (without lmedinc and
#free) due to an omitted variable bias

#Question 11(iii)
df11_1 = df11.dropna()
df11_1

pearsonr(df11_1.lmedinc,df11_1.free)
#THe correlation coefficient = -0.7469703472294885 w/ a p-value = 4.055270550593039e-42
#The negative correlation was expected, because an increase in median income 
#means more income, while an increase in free lunch eligibility means a decrease
#income

#Question 11(vi)
#No. because lmedinc captures the actual income (as a percent). while free
#captures those under an income threshold (usually poverty level)

#Question 11(v) -- ***CHECK NOTES ON VIF
vifs = pd.DataFrame({'variables':m11_2.model.exog_names,'vif':[ '%.2f' % elem for elem in vif ]})
vifs.sort_values(by='vif',ascending=False)
#The coefficient with the highest VIF is pctsgle at 5.74
#This indicates a moderate correlation with other independent variables, but it
#is still well below 10, meaning its tolerable. Also, the mean VIF of all the
#independent variables would be below 5



